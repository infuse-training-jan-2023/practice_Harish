AWSTemplateFormatVersion: 2010-09-09
Description: API Gateway and Lambda function for storing timestamp

Parameters:
  apiGatewayName:
    Type: String
    Default: logger-api1
  apiGatewayStageName:
    Type: String
    Default: logger
  apiGatewayHTTPMethod:
    Type: String
    Default: ANY
  lambdaFunctionName:
    Type: String
    Default: logger-fuction1

Resources:
  loggerApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Ref apiGatewayName

  loggerApiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: !Ref apiGatewayHTTPMethod
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt loggerLambdaFunction.Arn
      ResourceId: !GetAtt loggerApiGateway.RootResourceId
      RestApiId: !Ref loggerApiGateway

  apiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - loggerApiGatewayRootMethod
    Properties:
      RestApiId: !Ref loggerApiGateway
      StageName: !Ref apiGatewayStageName
      
  loggerLambdaAccessRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - sts:AssumeRole
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
        Policies:
          - PolicyName: lambda-s3-full-access
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - "s3:*"
                  Resource: "*"

  loggerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: logger/
      FunctionName: !Ref lambdaFunctionName
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt loggerLambdaAccessRole.Arn
      Runtime: python3.8

  invokeLambdaThroughLoggerApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt loggerLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${loggerApiGateway}/${apiGatewayStageName}/${apiGatewayHTTPMethod}/

  

Outputs:
  loggerApiGatewayInvokeURL:
    Value: !Sub https://${loggerApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName}

  lambdaArn:
    Value: !GetAtt loggerLambdaFunction.Arn
